name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  detect:
    name: Detect changed language directories
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Filter changed paths
      id: changes
      uses: dorny/paths-filter@v2
      with:
        filters: |
          go:
            - 'go/**'
          rust:
            - 'rust/**'
          nodejs:
            - 'nodejs/**'

    - name: Create matrix
      id: set-matrix
      env:
        GO_CHANGED: ${{ steps.changes.outputs.go }}
        RUST_CHANGED: ${{ steps.changes.outputs.rust }}
        NODE_CHANGED: ${{ steps.changes.outputs.nodejs }}
      run: |
        echo "Creating matrix from path filters"
        langs=()
        if [ "$GO_CHANGED" = "true" ]; then langs+=("go"); fi
        if [ "$RUST_CHANGED" = "true" ]; then langs+=("rust"); fi
        if [ "$NODE_CHANGED" = "true" ]; then langs+=("nodejs"); fi
        # If no language-specific changes were detected, build all implementations
        if [ ${#langs[@]} -eq 0 ]; then langs=("go" "rust" "nodejs"); fi
        # Build JSON array
        arr="["
        first=true
        for l in "${langs[@]}"; do
          if [ "$first" = true ]; then
            arr="$arr\"$l\""
            first=false
          else
            arr="$arr,\"$l\""
          fi
        done
        arr="$arr]"
        echo "matrix=$arr" >> $GITHUB_OUTPUT

  build:
    name: Build changed implementations
    needs: detect
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lang: ${{ fromJson(needs.detect.outputs.matrix) }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: ./
        file: ./${{ matrix.lang }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: |
          ghcr.io/${{ github.repository_owner }}/docker-socket-proxy:${{ matrix.lang }}-latest
          ghcr.io/${{ github.repository_owner }}/docker-socket-proxy:${{ matrix.lang }}-${{ github.sha }}